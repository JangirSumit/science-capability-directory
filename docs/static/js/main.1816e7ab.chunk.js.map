{"version":3,"sources":["images/icons/science (3).png","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","backgroundSize","cardContent","flexGrow","footer","paddingLeft","backdrop","zIndex","drawer","root","justifyContent","flexWrap","margin","Album","classes","useState","data","setData","setClose","React","openBackDrop","setOpenBackDrop","sectors","setSectors","searchQuery","setSearchQuery","openModal","setOpen","scroll","setScroll","dialogData","setDialogData","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","selectedSector","setSector","handleClickOpen","scrollType","event","preventDefault","stopPropagation","handleClose","q","a","search","request","fetch","json","result","records","forEach","element","ele","Sectors","split","map","trim","push","filter","item","index","indexOf","useEffect","fetchData","fetchQData","descriptionElementRef","useRef","descriptionElement","current","focus","Fragment","CssBaseline","AppBar","position","style","Toolbar","Avatar","src","className","rounded","noWrap","Container","maxWidth","component","gutterBottom","TextField","id","label","fullWidth","onKeyUp","e","target","value","List","aria-label","ListItem","button","aria-haspopup","aria-controls","onClick","currentTarget","ListItemText","primary","secondary","Menu","keepMounted","open","Boolean","onClose","s","MenuItem","selected","innerText","handleMenuItemClick","key","Grid","container","length","_id","xs","sm","md","Weblink","textDecoration","Card","CardContent","substring","Box","fontStyle","c","Chip","size","Divider","CardActions","Button","Backdrop","CircularProgress","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1816e7ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/science (3).a0a6971c.png\";","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconImage from \"./images/icons/science (3).png\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { Box, CircularProgress, Divider, Chip } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Sumit Jangir\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n    backgroundSize: \"90% 90%\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  paddingLeft: {\r\n    paddingLeft: \"5px\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([]);\r\n  const [open, setClose] = useState(true);\r\n  const [openBackDrop, setOpenBackDrop] = React.useState(false);\r\n  const [sectors, setSectors] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [openModal, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState(\"paper\");\r\n  const [dialogData, setDialogData] = useState({});\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n  const [selectedSector, setSector] = React.useState(\"\");\r\n\r\n  const handleClickOpen = (scrollType, data) => (event) => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setDialogData(data);\r\n  };\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setSector(event.currentTarget.innerText);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  async function fetchData(q) {\r\n    let search = q ? `&q=${q}` : \"\";\r\n    let sectors = [];\r\n\r\n    let request = fetch(\r\n      \"https://www.data.qld.gov.au/api/3/action/datastore_search?resource_id=8b9178e0-2995-42ad-8e55-37c15b4435a3\" +\r\n        search\r\n    );\r\n    let data = await (await request).json();\r\n    setData(data.result.records);\r\n    setClose(false);\r\n\r\n    data.result.records.forEach((element) => {\r\n      let ele = element.Sectors.split(\";\").map((a) => a.trim());\r\n      sectors.push(...ele);\r\n    });\r\n    sectors = sectors.filter((item, index) => {\r\n      return sectors.indexOf(item) === index;\r\n    });\r\n    setSectors(sectors);\r\n  }\r\n\r\n  async function fetchQData(q) {\r\n    setData([]);\r\n    setOpenBackDrop(true);\r\n    let search = q ? `&q=${q}` : \"\";\r\n\r\n    let request = fetch(\r\n      \"https://www.data.qld.gov.au/api/3/action/datastore_search?resource_id=8b9178e0-2995-42ad-8e55-37c15b4435a3\" +\r\n        search\r\n    );\r\n    let data = await (await request).json();\r\n    setData(data.result.records);\r\n    setClose(false);\r\n    setOpenBackDrop(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(searchQuery);\r\n  }, [searchQuery, selectedSector]);\r\n\r\n  useEffect(() => {\r\n    fetchQData(selectedSector);\r\n  }, [selectedSector]);\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (openModal) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [openModal]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\" style={{ background: \"#f44336\" }}>\r\n        <Toolbar>\r\n          <Avatar\r\n            variant=\"rounded\"\r\n            src=\"https://jangirsumit.github.io/science-capability-directory/static/media/science%20(3).a0a6971c.png\"\r\n            className={classes.rounded}\r\n          ></Avatar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.paddingLeft}\r\n          >\r\n            Science Directory\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Search and Learn\r\n            </Typography>\r\n            <TextField\r\n              id=\"search-text\"\r\n              label=\"Search test here...\"\r\n              variant=\"outlined\"\r\n              className=\"\"\r\n              fullWidth\r\n              onKeyUp={(e) => setSearchQuery(e.target.value)}\r\n            />\r\n            <div style={{ marginTop: \"5px\" }} color=\"primary\">\r\n              <List component=\"nav\" aria-label=\"Device settings\">\r\n                <ListItem\r\n                  button\r\n                  aria-haspopup=\"true\"\r\n                  aria-controls=\"lock-menu\"\r\n                  aria-label=\"Search by Sectors\"\r\n                  onClick={handleClickListItem}\r\n                >\r\n                  <ListItemText\r\n                    primary=\"Search by Sectors\"\r\n                    secondary={sectors[selectedIndex]}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n              <Menu\r\n                id=\"lock-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                {sectors.map((s, index) => (\r\n                  <MenuItem\r\n                    selected={index === selectedIndex}\r\n                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                    key={s.trim()}\r\n                  >\r\n                    {s.trim()}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4} key=\"1\">\r\n            {data.length > 0 ? (\r\n              data.map((card) => (\r\n                <Grid item key={card._id} xs={12} sm={6} md={4}>\r\n                  <a\r\n                    href={\r\n                      card.Weblink && card.Weblink.indexOf(\"http\") > -1\r\n                        ? card.Weblink\r\n                        : \"http\" + card.Weblink\r\n                    }\r\n                    target=\"_blank\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Card className={classes.card}>\r\n                      {/* <CardMedia\r\n                        className={classes.cardMedia}\r\n                        image={card[\"logo_clean\"]}\r\n                        title=\"Image title\"\r\n                      /> */}\r\n                      <CardContent className={classes.cardContent}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                          {card[\"Centre name\"]}{\" \"}\r\n                          {card[\"Abbreviation\"]\r\n                            ? \"(\" + card[\"Abbreviation\"] + \")\"\r\n                            : \"\"}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                          {card[\"Overview\"].length > 100\r\n                            ? card[\"Overview\"].substring(0, 100) + \"...\"\r\n                            : card[\"Overview\"]}\r\n                        </Typography>\r\n                        <b>Address</b>{\" \"}\r\n                        <Box fontStyle=\"oblique\">{card[\"Address\"]}</Box>\r\n                      </CardContent>\r\n                      <div className={classes.root}>\r\n                        {card[\"Sectors\"].split(\";\").map((c) => (\r\n                          <Chip\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            variant=\"outlined\"\r\n                            label={c}\r\n                            key={c}\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                      <Divider />\r\n                      <CardActions>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={handleClickOpen(\"paper\", card)}\r\n                        >\r\n                          View more details\r\n                        </Button>\r\n                      </CardActions>\r\n                    </Card>\r\n                  </a>\r\n                </Grid>\r\n              ))\r\n            ) : (\r\n              <Backdrop className={classes.backdrop} open={openBackDrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n              </Backdrop>\r\n            )}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Help Links\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Source of data:\r\n          <Button\r\n            target=\"_blank\"\r\n            href=\"https://www.data.qld.gov.au/\"\r\n            color=\"primary\"\r\n          >\r\n            Queensland Government\r\n          </Button>\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Mentor:\r\n          <a target=\"_blank\" href=\"#\"></a>\r\n          <Button target=\"_blank\" href=\"#u/\" color=\"primary\">\r\n            Mr. Matti richardson\r\n          </Button>\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          {dialogData[\"Centre name\"]}{\" \"}\r\n          {dialogData[\"Abbreviation\"]\r\n            ? \"(\" + dialogData[\"Abbreviation\"] + \")\"\r\n            : \"\"}\r\n        </DialogTitle>\r\n        <DialogContent dividers={scroll === \"paper\"}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Parent organisation</Box>\r\n              {dialogData[\"Parent organisation\"]}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Web link</Box>\r\n              <Button\r\n                target=\"_blank\"\r\n                href={dialogData[\"Weblink\"]}\r\n                color=\"primary\"\r\n              >\r\n                {dialogData[\"Weblink\"]}\r\n              </Button>\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Overview</Box>\r\n              {dialogData[\"Overview\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Centre summary</Box>\r\n              {dialogData[\"Centre summary\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Sectors</Box>\r\n              {dialogData[\"Sectors\"] &&\r\n                dialogData[\"Sectors\"]\r\n                  .split(\";\")\r\n                  .map((c) => (\r\n                    <Chip\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                      label={c}\r\n                      key={c}\r\n                    />\r\n                  ))}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Strengths and capabilities</Box>\r\n              {dialogData[\"Strengths and capabilities\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Facilities and major equipment</Box>\r\n              {dialogData[\"Facilities and major equipment\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Research staff</Box>\r\n              {dialogData[\"Research staff\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Organisation type</Box>\r\n              {dialogData[\"Organisation type\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Primary centre</Box>\r\n              {dialogData[\"Primary centre\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Address</Box>\r\n              {dialogData[\"Address\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Latitude and Longitude</Box>\r\n              {dialogData[\"Latitude\"] || \"\"}\r\n              {\",\"}\r\n              {dialogData[\"Longitude\"] || \"\"}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"body1\">\r\n              <Box color=\"warning.main\">Centre achievements</Box>\r\n              {dialogData[\"Centre achievements\"] || \"\"}\r\n            </Typography>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}